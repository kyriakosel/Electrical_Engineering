
clear;
clc;
% Declaration of variables
%___________________________
Ai=1.72;
constantk=1.380658*10^(-23);
Ior=19.9693*10^(-6);
np=2;
ns=40;
tr=301.18;
q=1.6*10^(-19);
eg=1.1;
Iscr=3.3;
ki=1.7*10^(-3);
Rs=5*10^(-5);
Rp=5*10^5;
%Create arrays for maximum values
mpp=[];
powermax =[0 0 0;0 0 0; 0 0 0];
voltagemax =[0 0 0;0 0 0; 0 0 0];
currentmax =[0 0 0;0 0 0; 0 0 0];
%___________________________
%________Main program_______
% run for 3 times
for n=1:3
%______Declaring input
Temperature=input('Enter the temperature Ta :' );
G=input('Enter the light intensity G:' );
%Declaring variables for the specific
Vz=0;
Ic=10;
dy=1;
VVoltagePV=[];
IcurrentPV=[];
%Find the following equations
Temp=Temperature+(0.2*G)+273.18; % Cell surface temp
Is=Ior*(Temp/tr)^3*exp(q*eg*(1/tr-1/Temp)/(constantk*Ai)); %Diode leakage I
Isc=(Iscr+ki*(Temp-tr))*G; %Short circuit current
%Only positive values for current
while Ic>0.00001
%Work the newtons method only while d is higher than 0
while abs(dy)>0.01
%Newtons method
fx=Ic-np*Isc+np*Is*(exp((q*(Vz/ns+Ic*Rs/np))/(Ai*constantk*Temp)-
1))+(Vz*np/ns+Ic*Rs)/Rp;
dfx=1+Rs/Rp+q*Is*Rs/(Ai*constantk*Temp)*exp((q*(Vz/ns+Ic*Rs/np))/(Ai*constantk*Temp));
dy=fx/dfx;
Ic=Ic-dy;
end
%Initializing tolerance value
dy = 10;
%Filling arrays with I and V values
IcurrentPV=[IcurrentPV Ic];
VVoltagePV=[VVoltagePV Vz];
%increasing V in order to get a correct graph with slight increase of v
Vz=Vz+0.01;
end
%Calculating power array
mpp=VVoltagePV.*IcurrentPV;
%Code for finding max P for each curve
s=size(mpp,2);
for i=1:1:s
if (mpp(n)>powermax(1,n))
powermax(1,n)=mpp(i);
voltagemax(1,n)=VVoltagePV(i);
currentmax(1,n)=IcurrentPV(i);
end
end
if n==1
plot(VVoltagePV,IcurrentPV,'y');
else if n==2
plot(VVoltagePV,IcurrentPV,'m');
else if n==3
plot(VVoltagePV,IcurrentPV,'k');
end
end
end
%____________Plot the graph_____________
xlabel('V - Voltage');
ylabel('I- Current');
grid on;
hold on;
end
